xlab("MAF (%)")+
ggtitle(paste0("MAF of variants by Polyphen assignment"))+
scale_fill_brewer(palette="Set1",drop=FALSE)+
theme(plot.title = element_text(hjust = 0.5))
genie.full$MAF <- 100*(genie.full$t_alt_count / (genie.full$t_ref_count+genie.full$t_alt_count))
genie.full$polyphen_summary <- genie.full$Polyphen_Prediction %in% c("probably_damaging","possibly_damaging")
ggplot(genie.full,aes(x=MAF,fill=polyphen_summary))+
geom_histogram(alpha=.4)+
theme_bw()+
facet_grid(polyphen_summary~.,scale="free_y",)+
xlab("MAF (%)")
ggplot(genie.full,aes(x=MAF,fill=polyphen_summary))+
geom_histogram(alpha=.4)+
theme_bw()+
facet_grid(polyphen_summary~.,scale="free_y",)+
xlab("MAF (%)")+
ggtitle(paste0("MAF of variants by Polyphen assignment"))+
scale_fill_brewer(palette="Set1",drop=FALSE)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(genie.full,aes(x=MAF,fill=polyphen_summary))+
geom_histogram(alpha=.4)+
theme_bw()+
facet_grid(polyphen_summary~.,scale="free_y",)+
xlab("MAF (%)")+
xlim(0,100)+
ggtitle(paste0("MAF of variants by Polyphen assignment"))+
scale_fill_brewer(palette="Set1",drop=FALSE)+
theme(plot.title = element_text(hjust = 0.5))
table(genie.full$Polyphen_Prediction)
table(genie.full$SIFT_Prediction)
genie.full$MAF <- 100*(genie.full$t_alt_count / (genie.full$t_ref_count+genie.full$t_alt_count))
genie.full$SIFT_summary <- genie.full$SIFT_Prediction %in% c("deleterious","deleterious_low_confidence")
ggplot(genie.full,aes(x=MAF,fill=SIFT_summary))+
geom_histogram(alpha=.4)+
theme_bw()+
facet_grid(SIFT_summary~.,scale="free_y",)+
xlab("MAF (%)")+
xlim(0,100)+
ggtitle(paste0("MAF of variants by SIFT deleterious assignment"))+
scale_fill_brewer(palette="Set1",drop=FALSE)+
theme(plot.title = element_text(hjust = 0.5))
summary(genie.full$MAF)
summary(genie.full$MAF,genie.full$polyphen_summary)
summary(,genie.full$polyphen_summary,genie.full$MAF)
head(genie.full)
genie.full$gene_and_hgvsp <- paste0(genie.full$Hugo_Symbol,"-",genie.full$HGVSp)
panel.cnt <- genie.full %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::summarise(number.patients.per.panel=dplyr::n_distinct(PATIENT_ID),
number.genes.per.panel=dplyr::n_distinct(Hugo_Symbol),
number.distinct.AA.changes=dplyr::n_distinct(gene_and_hgvsp)) %>%
dplyr::arrange(desc(number.patients.per.panel))
knitr::kable(panel.cnt, )
head(genie.full)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2) %>%
dplyr::summarise(n=n())
head(assaySigTbl)
head(genie.full[,c("Reference_Allele","Tumor_Seq_Allele2","HGVSc")])
table(genie.full$Tumor_Seq_Allele2)
table(genie.full$Tumor_Seq_Allele1)
head(genie.full[,c("Reference_Allele","Tumor_Seq_Allele1","Tumor_Seq_Allele2","HGVSc")])
head(genie.full)
tail(genie.full[,c("Reference_Allele","Tumor_Seq_Allele1","Tumor_Seq_Allele2","HGVSc")])
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(n=n())
dim(assaySigTbl)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / sum(nVariants) * 100)
dim(assaySigTbl)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / sum(n()) * 100)
assaySigTbl
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n())
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n())
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100) %>%
dplyr::ungroup()
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n())
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,assayVariantsTotal,add=T) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100) %>%
dplyr::ungroup()
head(assaySigTbl)
dima(assaySigTbl)
dim(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100) %>%
dplyr::ungroup()
head(assaySigTbl)
dim(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
percVariants = n() / assayVariantsTotal * 100)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::group_by(Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=assayVariantsTotal,
percVariants = n() / assayVariantsTotal * 100)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=assayVariantsTotal,
percVariants = n() / assayVariantsTotal * 100)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=assayVariantsTotal,
percVariants = nVariants / assayVariantsTotal * 100)
head(assaySigTbl)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::distinct(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::distinct(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::last(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
dim(assaySigTbl)
head(assaySigTbl)
knitr::kable(head(assaySigTbl), )
knitr::kable(head(assaySigTbl), )
knitr::kable(head(assaySigTbl,10), )
assaySigTbl <- group_by(SEQ_ASSAY_ID) %>%
dplyr::summarise(perTotal = sum(percVariants))
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::last(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
knitr::kable(head(assaySigTbl,10), )
tmp <- assaySigTbl %>%
group_by(SEQ_ASSAY_ID) %>%
dplyr::summarise(perTotal = sum(percVariants))
head(tmp)
tmp
table(tmp$perTotal)
assaySigTbl$ID <- paste0("Reference_Allele","Tumor_Seq_Allele2","Strand")
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")]
head(sigMtrx)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = ID,values_from=percVariants)
head(sigMtrx)
assaySigTbl$ID <- paste0(assaySigTbl$Reference_Allele,"-",assaySigTbl$Tumor_Seq_Allele2,"-",assaySigTbl$Strand)
head(assaySigTbl$ID)
assaySigTbl$ID <- paste0(assaySigTbl$Reference_Allele,"-",assaySigTbl$Tumor_Seq_Allele2,"-",assaySigTbl$Strand)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = ID,values_from=percVariants)
sigMtrx
head(sigMtrx)
sigMtrx <- assaySigTbl[,c("ID","","percVariants")] %>%
tidyr::pivot_wider(names_from = SEQ_ASSAY_ID,values_from=percVariants)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = SEQ_ASSAY_ID,values_from=percVariants)
head(sigMtrx)
dim(assaySigTbl)
dim(sigMtrx)
minAssayVarCnt <- 1000 # to be considered, each assay must have at least this many variants across all patients
# create a table that has a profile of variant counts for every combination of ref-->alt for each assay
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::filter(assayVariantsTotal >= minAssayVarCnt) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::last(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
knitr::kable(head(assaySigTbl,10), )
assaySigTbl$ID <- paste0(assaySigTbl$Reference_Allele,"-",assaySigTbl$Tumor_Seq_Allele2,"-",assaySigTbl$Strand)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = SEQ_ASSAY_ID,values_from=percVariants)
dim(sigMtrx)
head(sigMtrx)
library(Rtsne)
install.packages("Rtsne")
colnames(sigMtrx)
sigMtrxScale <- scale(sigMtrx)
sigMtrxScale <- scale(sigMtrx)
scale(sigMtrx)
head(sigMtrx)
sigMtrx[,!colnames(sigMtrx) %in% c("ID")]
sigMtrx[,!colnames(sigMtrx) %in% c("ID")]
sigMtrx2 <- sigMtrx[,!colnames(sigMtrx) %in% c("ID")]
sigMtrxScale <- scale(sigMtrx2)
head(sigMtrxScale)
set.seed(144) # For reproducibility
tsne_results <- Rtsne(sigMtrxScale, perplexity = 30, theta = 0.5, max_iter = 1000)
library(Rtsne)
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], Species = colnames(sigMtrx))
set.seed(144) # For reproducibility
tsne_results <- Rtsne(sigMtrxScale, perplexity = 30, theta = 0.5, max_iter = 1000)
tsne_results <- Rtsne(sigMtrxScale, perplexity = 10, theta = 0.5, max_iter = 1000)
tsne_results <- Rtsne(sigMtrxScale, perplexity = 5, theta = 0.5, max_iter = 1000)
tsne_results <- Rtsne(sigMtrxScale, perplexity = 2, theta = 0.5, max_iter = 1000)
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], Species = colnames(sigMtrx))
head(tsne_results$Y[,1])
dim(tsne_results$Y[,1])
length(tsne_results$Y[,1])
length( tsne_results$Y[,2])
dim(sigMtrxScale)
head(sigMtrxScale)
t(sigMtrx2))
t(sigMtrx2)
dim(sigMtrx2)
assaySigTbl$ID <- paste0(assaySigTbl$Reference_Allele,"-",assaySigTbl$Tumor_Seq_Allele2,"-",assaySigTbl$Strand)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = SEQ_ASSAY_ID,values_from=percVariants)
sigMtrx2 <- sigMtrx[,!colnames(sigMtrx) %in% c("ID")]
dim(sigMtrx)
head(sigMtrx)
dim(assaySigTbl)
head(assaySigTbl)
head(sigMtrx)
sigMtrx
rownames(sigMtrx)
sigMtrx$ID
minAssayVarCnt <- 1000 # to be considered, each assay must have at least this many variants across all patients
# create a table that has a profile of variant counts for every combination of ref-->alt for each assay
assaySigTbl <- genie.full %>%
dplyr::filter(Variant_Type == "SNP") %>%
dplyr::group_by(SEQ_ASSAY_ID) %>%
dplyr::mutate(assayVariantsTotal=n()) %>%
dplyr::filter(assayVariantsTotal >= minAssayVarCnt) %>%
dplyr::ungroup() %>%
dplyr::group_by(SEQ_ASSAY_ID,Reference_Allele,Tumor_Seq_Allele2,Strand,add=T) %>%
dplyr::summarise(nVariants=n(),
assayVariantsTotal=dplyr::last(assayVariantsTotal),
percVariants = nVariants / assayVariantsTotal * 100)
knitr::kable(head(assaySigTbl,10), )
dim(assaySigTbl)
head(assaySigTbl)
assaySigTbl$ID <- paste0(assaySigTbl$Reference_Allele,"-",assaySigTbl$Tumor_Seq_Allele2,"-",assaySigTbl$Strand)
sigMtrx <- assaySigTbl[,c("ID","SEQ_ASSAY_ID","percVariants")] %>%
tidyr::pivot_wider(names_from = SEQ_ASSAY_ID,values_from=percVariants)
sigMtrx2 <- sigMtrx[,!colnames(sigMtrx) %in% c("ID")]
dim(sigMtrx)
sigMtrx
colSums(sigMtrx)
colSums(sigMtrx2)
sigMtrxScale <- scale(t(sigMtrx2))
# Run t-SNE
set.seed(144) # For reproducibility
tsne_results <- Rtsne(sigMtrxScale, perplexity = 5, theta = 0.5, max_iter = 1000)
sigMtrxScale
set.seed(144) # For reproducibility
tsne_results <- Rtsne(sigMtrxScale, perplexity = 5, theta = 0.5, max_iter = 1000)
# Create a data frame for plotting
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], Species = colnames(sigMtrx))
dim(tsne_results)
tsne_results
dim(sigMtrxScale)
dim(tsne_results)
tsne_results
colnames(sigMtrx)
lenth(tsne_results$Y[,1])
length(tsne_results$Y[,1])
length(tsne_results$Y[,2])
data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], Species = colnames(sigMtrx))
length(colnames(sigMtrx))
dim(sigMtrx2)
head(sigMtrx2)
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], Species = colnames(sigMtrx2))
tsne_data
ggplot(tsne_data, aes(x = X, y = Y, color = assay)) +
geom_point() +
theme_minimal() +
ggtitle("t-SNE Plot of Assay signatures")
ggplot(tsne_data, aes(x = X, y = Y, color = assay)) +
geom_point() +
theme_minimal() +
ggtitle("t-SNE Plot of Assay signatures")
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], assay = colnames(sigMtrx2))
# Plot using ggplot2
ggplot(tsne_data, aes(x = X, y = Y, color = assay)) +
geom_point() +
theme_minimal() +
ggtitle("t-SNE Plot of Assay signatures")
table(genie.full$Strand)
dim(sigMtrx2)
head(sigMtrx2)
sigMtrxScale
rowSums(sigMtrxScale)
colSums(sigMtrxScale)
sigMtrxScale <- t(scale(sigMtrx2))
# Run t-SNE
set.seed(144) # For reproducibility
tsne_results <- Rtsne(sigMtrxScale, perplexity = 5, theta = 0.5, max_iter = 1000)
# Create a data frame for plotting
tsne_data <- data.frame(X = tsne_results$Y[,1], Y = tsne_results$Y[,2], assay = colnames(sigMtrx2))
# Plot using ggplot2
ggplot(tsne_data, aes(x = X, y = Y, color = assay)) +
geom_point() +
theme_minimal() +
ggtitle("t-SNE Plot of Assay signatures")
head(patient.genie)
numeric_summary <- patient.genie %>%
select_if(is.numeric) %>%
summarise_all(funs(mean, median, sd, min, max))
numeric_summary <- patient.genie %>%
select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
summarise_all(tibble::list(mean,median,sd,min,max))
numeric_summary <- patient.genie %>%
select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
summarise_all(tibble::lst(mean,median,sd,min,max))
numeric_summary
head(numeric_summary)
numeric_summary <- patient.genie %>%
select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
summarise_all(tibble::lst(mean,median,sd,min,max))
numeric_summary
?summarise_all()
numeric_summary <- patient.genie %>%
select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
dplyr::summarise_all(tibble::lst(mean,median,sd,min,max))
numeric_summary
numeric_summary <- patient.genie %>%
dplyr::select_if(is.numeric) %>%
dplyr::summarise(n=n())
numeric_summary
numeric_summary <- patient.genie %>%
dplyr::select_if(is.numeric) %>%
summarise_all(funs(mean, median, sd, min, max))
numeric_summary <- patient.genie %>%
dplyr::select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
#dplyr::summarise_all(tibble::lst(mean,median,sd,min,max))
dplyr::summarise_all(list(mean = mean,
median = median))
numeric_summary
head(patient.genie)
table(patient.genie$YEAR_CONTACT)
categorical_summary <- patient.genie %>%
select_if(is.factor) %>%
summarise_all(funs(table))
categorical_summary <- patient.genie %>%
select_if(is.factor) %>%
dplyr::summarise_all(list(table = table,
n = length))
categorical_summary
head9categorical_summary
head(categorical_summary)
head(patient.genie)
table(patient.genie$SEX)
as.factor(patient.genie$SEX)
as.factor(patient.genie$SEX)
install.packages(GGally)
install.packages("GGally")
library(GGally)
head(patient.genie)
PRIMARY_RACE
ggpairs(patient.genie[,c("SEX","PRIMARY_RACE","DEAD")])
table(patient.genie$PRIMARY_RACE)
table(patient.genie$DEAD)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(rticulate)
library(reticulate)
reticulate::repl_python()
head(pp)
ggpairs(patient.genie[,c("SEX","PRIMARY_RACE","DEAD")])
pp <- patient.genie
head(pp)
head(pp)
head(pp)
reticulate::repl_python()
reticulate::repl_python()
patient_py = r.pp
?repl_python()
reticulate::r_to_py()
?reticulate::r_to_py
patient_py = reticulate::r_to_py(patient.genie)
patient_py = reticulate::r_to_py(patient.genie,convert=F)
numeric_summary <- patient.genie %>%
dplyr::select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
#dplyr::summarise_all(tibble::lst(mean,median,sd,min,max))
dplyr::summarise_all(list(mean = mean,
median = median))
numeric_summary
categorical_summary
qurarto check
quarto check
reticulate::repl_python()
reticulate::repl_python()
reticulate::use_condaenv()
?reticulate::use_condaenv()
?reticulate::use_condaenv()
reticulate::repl_python()
reticulate::use_condaenv(condaenv="/Users/larsonhogstrom/anaconda3/envs/onconpc_conda_env/")
reticulate::repl_python()
ls()
reticulate::use_condaenv(condaenv="/Users/larsonhogstrom/anaconda3/envs/onconpc_conda_env/")
reticulate::repl_python()
