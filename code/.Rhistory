library(ggplot2)
library(reshape2)
quit()
#| echo: false
#| include: false
library(dplyr)
library(UpSetR)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(Rtsne)
library(reticulate)
library(GGally)
#| echo: false
#| include: false
# set python path
reticulate::use_condaenv(condaenv="/Users/larsonhogstrom/anaconda3/envs/balder_conda_env/")
bDir <- "../../data/processed/balderResultsDb"
figDir <- "../../output/actionability_db_curration_20231220"
mydb <- DBI::dbConnect(RSQLite::SQLite(), paste0(bDir,"/actionable-biomarker-db.sqlite"))
#genie <- RSQLite::dbGetQuery(mydb, 'SELECT * FROM GeniePatientVarients')
sample.genie <- RSQLite::dbGetQuery(mydb, 'SELECT * FROM GenieClinicalSampleData')
patient.genie <- RSQLite::dbGetQuery(mydb, 'SELECT * FROM GeniePatientData')
## sumarize patient data if numeric
numeric_summary <- patient.genie %>%
dplyr::select_if(is.numeric) %>%
#summarise_all(funs(mean, median, sd, min, max))
#dplyr::summarise_all(tibble::lst(mean,median,sd,min,max))
dplyr::summarise_all(list(mean = mean,
median = median))
categorical_summary <- patient.genie %>%
select_if(is.factor) %>%
dplyr::summarise_all(list(table = table,
n = length))
ggpairs(patient.genie[,c("SEX","DEAD")]) #"PRIMARY_RACE",
patient_py = reticulate::r_to_py(patient.genie)
reticulate::repl_python()
table(as.numeric(patient.genie$YEAR_DEATH),exclude=NULL)
reticulate::repl_python()
